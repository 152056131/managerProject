<?xml version="1.0" encoding="UTF-8"?>
<!--scan="true" 当发生变化 自动重载文件-->
<!--scanPeriod="1000" 自动重载文件时间间隔-->
<!--debug="true" 打印出logback内部日志信息-->
<configuration debug="false" scan="true">
    <!--定义日志文件的存储地址 勿在 LogBack 的配置中使用相对路径-->
    <!--app.name服务名称 log.path日志文件存放路径-->
    <property name="app.name" value="managerProject"/>
    <property name="log.path" value="src/main/resources/logs"/>
    <!--console控制台日志的输出格式-->
    <appender name="console" class="ch.qos.logback.core.ConsoleAppender">
        <encoder>
            <!--格式化输出:
             %d:日期; %thread:线程名; %-5level:级别从左显示5个字符宽度; %class:全类名; %logger{36}:当前类,最长36个字符; %msg:日志消息; %n是换行符-->
            <pattern>
                ${app.name} %d{yyyy-MM-dd HH:mm:ss.SSS} [%thread] %-5level %class %logger{36} [--%method--] #:%L---
                %msg%n
            </pattern>
            <charset>UTF-8</charset>
        </encoder>
    </appender>
    <!--文件输出-->
    <appender name="file" class="ch.qos.logback.core.rolling.RollingFileAppender">
        <!--文件存放路径-->
        <file>${log.path}/${app.name}</file>
        <rollingPolicy class="ch.qos.logback.core.rolling.TimeBasedRollingPolicy">
            <!--文件超过1MB后就新建一个文件-->
            <fileNamePattern>${log.path}/${app.name}.%d{yyyy-MM-dd}.%i.log</fileNamePattern>
            <!--日志文件保留天数-->
            <maxHistory>7</maxHistory>
            <TimeBasedFileNamingAndTriggeringPolicy class="ch.qos.logback.core.rolling.SizeAndTimeBasedFNATP">
                <!--日志文件最大的大小-->
                <maxFileSize>1MB</maxFileSize>
            </TimeBasedFileNamingAndTriggeringPolicy>
        </rollingPolicy>
        <!--文件日志的输出格式-->
        <encoder>
            <!--格式化输出：%d表示日期，%thread表示线程名，%-5level：级别从左显示5个字符宽度%msg：日志消息，%n是换行符
            %logger{36}表示logger是class的全名，36表示限制最长字符-->
            <pattern>%d{yyyy-MM-dd HH:mm:ss.SSS} %-5level [%thread] %logger{36} [%file:%line] %msg%n</pattern>
            <charset>utf-8</charset>
        </encoder>
    </appender>
    <!--根日志输出级别-->
    <root level="error">
        <!--输出到控制台-->
        <appender-ref ref="console"/>
        <!--输出到文件-->
        <appender-ref ref="file"/>
    </root>
    <!--和application.porperties/yml协调使用二选一,同时使用时application.porperties/yml配置级别高-->
    <!--自定义日志级别配置,指定我们项目都是info级别-->

</configuration>